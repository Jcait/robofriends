{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","Searchbox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKC,UAAU,oDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA2BH,EAA3B,cACrB,gCACC,6BAAKF,IACL,4BAAIC,WCYOK,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACA,8BAECA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OAAQ,cAAC,EAAD,CAEPR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCMMC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCCI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACCJ,EAAMK,YCkBMC,E,kDApBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAO,CACXC,UAAU,GAHO,E,qDAOnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAK3B,WACC,OAAGG,KAAKJ,MAAMC,SACN,6DAEDG,KAAKX,MAAMK,a,GAlBOQ,aCgDZC,G,wDAxCb,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACZlB,OAAS,GACVK,YAAa,IAJA,E,qDAQd,WAAqB,IAAD,OACnByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAAQkC,S,oBAQvC,WACC,MAAiCZ,KAAKJ,MAA9BlB,EAAR,EAAQA,OAASK,EAAjB,EAAiBA,YACR8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACvC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEnD,OAAQtC,EAAOwC,OAEf,sBAAK5C,UAAU,KAAf,UACF,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU1B,OAAUmC,WANlB,6C,GA1BWM,IAAMjB,YCGVkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACT,cAAC,EAAD,IAASC,SAASC,eAAe,SAOjCX,M","file":"static/js/main.64d89490.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn (\r\n\t\t<div className='bg-light-green dib br3 pa 3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt=\"robots\" src ={`https://robohash.org/${id}?200x200`}/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n\t<div>\r\n\t{\r\n\t\trobots.map((user, i) => {\r\n\t\t\treturn( <Card \r\n\t\t\t\tkey={i} \r\n\t\t\t\tid={robots[i].id} \r\n\t\t\t\tname={robots[i].name} \r\n\t\t\t\temail={robots[i].email} \r\n\t\t\t/>\r\n\t\t)\r\n\t})\r\n\t}\r\n\t</div>\r\n\t);\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Searchbox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder='search robots'\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Searchbox","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Scroll; ","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true})\r\n\t}\r\n\r\n\r\n\r\n\trender (){\r\n\t\tif(this.state.hasError) {\r\n\t\t\treturn <h1> Ooooops. That is not good </h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\nexport default ErrorBoundry","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Searchbox from '../components/Searchbox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css'\r\n\r\n\r\n\r\n class App extends React.Component {\r\n \tconstructor() {\r\n \t\tsuper()\r\n \t\tthis.state = {\r\n \t\t\trobots : [],\r\n\t\t\tsearchfield: ''\r\n \t\t}\r\n \t}\r\n\r\n \tcomponentDidMount() {\r\n \t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n \t\t.then(response => response.json())\r\n \t\t.then(users => this.setState({robots: users }))\r\n \t}\r\n\r\n \tonSearchChange = (event) =>  {\r\n \t\tthis.setState({ searchfield: event.target.value })\r\n\r\n \t}\r\n\r\n \trender() {\r\n \t\tconst { robots , searchfield } = this.state;\r\n \t\t \t\tconst filteredRobots = robots.filter(robot => {\r\n \t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n \t\t})\r\n \t\t \t\treturn !robots.length ?\r\n \t\t \t\t\t <h1>Loading</h1> : \r\n\t\t\t( \t<div className='tc'>\r\n\t\t\t\t<h1 className='f1'>Robotfriends</h1>\r\n\t\t\t\t<Searchbox searchChange={this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t<CardList robots = {filteredRobots} />\r\n\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t)\r\n }\r\n\t\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n<App />, document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}